t <- demo12 %>% filter(country == "CHINA")
require(psych)
require(dplyr)
require(tidyr)
require(stringr)
require(lubridate)
require(ggplot2)
require(readr)
require(readxl)
#import contractor data frames
library(readr)
contractor_deaths_clean_2_ <- read_csv("~/Desktop/JOURNO LYFE/Spring 2017/DATA/Data Store/Iraq Data/contractor.deaths.clean (2).csv")
View(contractor_deaths_clean_2_)
library(readr)
contract_winners <- read_csv("~/Desktop/JOURNO LYFE/Spring 2017/DATA/Data Store/Iraq Data/contract.winners.csv",
col_types = cols(employees = col_number(),
expended = col_number(), obligated = col_number(),
work.item.end.date = col_date(format = "%m/%d/%Y"),
work.item.start.date = col_date(format = "%m/%d/%Y")))
View(contract_winners)
#overwrite old file with extra columns
contractor_deaths_clean_2_ <- contractor_deaths_clean_2_[ ,1:7]
contractor_deaths_clean_2_$employer <- str_to_upper(contractor_deaths_clean_2_$employer)
contract_winners$contractor <- str_to_upper(contract_winners$contractor)
contractor.total <- contract_winners %>%
inner_join(contractor_deaths_clean_2_, by=c("contractor" = "employer"))
View(contractor.total)
contract.winners.total <- contract_winners %>%
group_by(contractor) %>%
summarize(obligated = sum(obligated),
expended = sum(expended),
employees = sum(employees),
count = n())
View(contract.winners.total)
contract.winner.total <- inner_join(contractor_deaths_clean_2_, by=c("contractor" = "employer"))
View(contract.winners.total)
contract.winners.total <- contract.winners.total %>% inner_join(contractor_deaths_clean_2_, by=c("contractor" = "employer"))
View(contract.winners.total)
setwd("~/Documents/GitHub/spencer-silva")
# box and whisker plot?
library(dplyr)
library(readr)
library(ggplot2)
#data import
qual_hitters <- read_csv("data/qual_hitters.csv")
qual_hitters2017 <- read_csv("data/qual_hitters_2017.csv")
## Stripchart for all data
stripchart(qual_hitters$HR, method = "jitter") %>%
# box and whisker
qualhitters_since95_box <- ggplot(qual_hitters, aes(x=Season, y=HR, group=Season)) +
geom_boxplot(notch = TRUE, fill = "white", colour = "#3366FF") +
scale_x_continuous(breaks = c(1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015, 2016, 2017)) +
scale_y_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75), limits = c(0,75)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 24, base_family = "Helvetica") +
geom_boxplot_interactive(aes(tooltip = Name))
print(qualhitters_since95_box)
## interactive box plot
#load package
library(ggiraph)
library(htmlwidgets)
# make interactive version of the chart
boxplot_interactive <- ggiraph(code = print(qualhitters_since95_box), height_svg=4)
print(boxplot_interactive)
# save chart as a web page
saveWidget(boxplot_interactive, "boxplot_interactive.html", selfcontained = TRUE, libdir = NULL, background = "white")
# ggplot(qual_hitters, aes(x=Season, y=HR, group = hr_bin)) +
#   geom_bar(stat = "identity", fill = "#CCCCCC", alpha = 0.5, aes(color = hr_bin))
## filter from 2010-2017
qual_hitters1017 <- qual_hitters %>%
filter(Season>=2010)
# violin and jitter plots
# 1995 onwards
# jitter
ggplot(qual_hitters, aes(x=Season, y=HR, group=Season)) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(1995:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
ylab("Home runs per player") +
xlab("") +
coord_flip()
# combined
ggplot(qual_hitters, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, alpha = 0.5, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(1995:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
ylab("Home runs per player") +
xlab("") +
coord_flip()
# violin
ggplot(qual_hitters, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
scale_x_continuous(breaks = c(1995:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
ylab("Home runs per player") +
xlab("") +
coord_flip()
# 2010 onwards
# jitter
ggplot(qual_hitters1017, aes(x=Season, y=HR, group=Season)) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(2010:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
ylab("Home runs per player") +
xlab("")
# violin
ggplot(qual_hitters1017, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
scale_x_continuous(breaks = c(2010:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
ylab("Home runs per player") +
xlab("")
# combined
ggplot(qual_hitters1017, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, alpha = 0.5, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(2010:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
ylab("Home runs per player") +
xlab("")
setwd("~/Documents/GitHub/spencer-silva/data")
# box and whisker plot?
library(dplyr)
library(readr)
library(ggplot2)
#data import
qual_hitters <- read_csv("data/qual_hitters.csv")
qual_hitters2017 <- read_csv("data/qual_hitters_2017.csv")
## Stripchart for all data
stripchart(qual_hitters$HR, method = "jitter") %>%
# box and whisker
qualhitters_since95_box <- ggplot(qual_hitters, aes(x=Season, y=HR, group=Season)) +
geom_boxplot(notch = TRUE, fill = "white", colour = "#3366FF") +
scale_x_continuous(breaks = c(1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015, 2016, 2017)) +
scale_y_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75), limits = c(0,75)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 24, base_family = "Helvetica") +
geom_boxplot_interactive(aes(tooltip = Name))
print(qualhitters_since95_box)
## interactive box plot
#load package
library(ggiraph)
library(htmlwidgets)
# make interactive version of the chart
boxplot_interactive <- ggiraph(code = print(qualhitters_since95_box), height_svg=4)
print(boxplot_interactive)
# save chart as a web page
saveWidget(boxplot_interactive, "boxplot_interactive.html", selfcontained = TRUE, libdir = NULL, background = "white")
# ggplot(qual_hitters, aes(x=Season, y=HR, group = hr_bin)) +
#   geom_bar(stat = "identity", fill = "#CCCCCC", alpha = 0.5, aes(color = hr_bin))
## filter from 2010-2017
qual_hitters1017 <- qual_hitters %>%
filter(Season>=2010)
# violin and jitter plots
# 1995 onwards
# jitter
ggplot(qual_hitters, aes(x=Season, y=HR, group=Season)) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(1995:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
ylab("Home runs per player") +
xlab("") +
coord_flip()
# combined
ggplot(qual_hitters, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, alpha = 0.5, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(1995:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
ylab("Home runs per player") +
xlab("") +
coord_flip()
# violin
ggplot(qual_hitters, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
scale_x_continuous(breaks = c(1995:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
ylab("Home runs per player") +
xlab("") +
coord_flip()
# 2010 onwards
# jitter
ggplot(qual_hitters1017, aes(x=Season, y=HR, group=Season)) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(2010:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
ylab("Home runs per player") +
xlab("")
# violin
ggplot(qual_hitters1017, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
scale_x_continuous(breaks = c(2010:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
ylab("Home runs per player") +
xlab("")
# combined
ggplot(qual_hitters1017, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, alpha = 0.5, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(2010:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
ylab("Home runs per player") +
xlab("")
library(dplyr)
library(readr)
library(ggplot2)
ggplot(qual_hitters1017, aes(x=Season, y=HR, group=Season)) +
geom_violin(fill = "#CCD6F5", color = "#3366FF", size = 0.2) +
scale_x_continuous(breaks = c(2010:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
ylab("Home runs per player") +
xlab("")
ggplot(qual_hitters1017, aes(x=Season, y=HR, group=Season)) +
geom_jitter(shape = 21, colour="black", size=2, stroke=0.1, width=0.3, aes(group=hr_bin, fill=hr_bin)) +
scale_fill_brewer(palette = "Blues", guide=FALSE) +
scale_x_continuous(breaks = c(2010:2017)) +
scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70)) +
scale_color_brewer(palette = "Set1", name = "") +
theme_minimal(base_size = 20, base_family = "Georgia") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
ylab("Home runs per player") +
xlab("")
hr_tracker <- read_csv("data/hr_trackerclean.csv")
library(dplyr)
library(readr)
library(ggplot2)
hr_tracker <- read_csv("data/hr_trackerclean.csv")
hr_tracker <- read_csv("data/hr_tracker_clean.csv")
setwd("~/Documents/GitHub/spencer-silva")
hr_tracker <- read_csv("data/hr_tracker_clean.csv")
View(hr_tracker)
ggplot(hr_tracker, aes(x=tru_dist,y=date)) +
geom_point()
View(hr_tracker)
library(dplyr)
library(readr)
library(ggplot2)
hr_tracker <- read_csv("data/hr_trackerclean.csv")
View(hr_tracker)
ggplot(hr_tracker, aes(x=tru_dist,y=season)) +
geom_point()
ggplot(hr_tracker, aes(x=mean(tru_dist),y=season)) +
geom_point()
View(hr_tracker)
ggplot(hr_tracker, aes(x=hr_tracker$tru_dist,y=season)) +
geom_point()
setwd("~/Documents/GitHub/spencer-silva")
cats <- c("season","mean_dist","median_dist","mean_speed", "med_speed")
season <- c(2010,2011,2012,2013,2014,2015,2016,2017)
mean_dist <- hr_tracker %>%
group_by(season) %>%
summarize(mean = mean(true_dist))
View(mean_dist)
med_dist <- hr_tracker %>%
group_by(season) %>%
summarize(median = median(true_dist))
View(med_dist)
med_dist <- hr_tracker %>%
group_by(season) %>%
summarize(median = median(true_dist, na.rm = FALSE))
View(med_dist)
View(med_dist)
med_dist <- hr_tracker %>%
group_by(season) %>%
summarize(median = median(true_dist, na.rm = TRUE))
View(med_dist)
mean_dist <- hr_tracker %>%
group_by(season) %>%
summarize(mean = mean(true_dist, na.rm = TRUE))
View(mean_dist)
mean_speed <- hr_tracker %>%
group_by(season) %>%
summarize(mean = mean(speed_off_bat, na.rm = TRUE))
med_speed <- hr_tracker %>%
group_by(season) %>%
summarize(median = median(speed_off_bat, na.rm = TRUE))
View(mean_speed)
View(med_speed)
summarize(hr_tracker, type_luck)
summary(type_luck)
summary(hr_tracker$type_luck)
str(hr_tracker$type_luck)
type <- c("je","nd","pl")
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(n(type_luck))
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(count = n(type, na.rm = TRUE))
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(count = n())
View(type_luck)
type_luck <- type
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(count = n())
type_luck$type
type_luck$newcolumn(type)
type_luck <- data.frame(type_luck$season,type_luck$count, type, mean_dist, mean_speed, med_dist, med_speed)
type_luck <- data.frame(type_luck$season,type_luck$count, type)
type_luck <- hr_tracker %>%
group_by(season, type) %>%
summarize(count = n())
type_luck <- hr_tracker %>%
group_by(season, type_luck) %>%
summarize(count = n())
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(count = n(type_luck))
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(type_luck,count = n())
type_luck$je
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(n_distinct(type_luck))
View(type_luck)
type_luck <- hr_tracker %>%
group_by(type_luck, season) %>%
View(type_luck)
type.luck <- hr_tracker %>%
group_by(season) %>%
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(type_luck,count = n())
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(count = n())
mutate(hr_tracker, je = filter(hr_tracker, type_luck == je) )
mutate(hr_tracker, "je" = filter(hr_tracker, type_luck == je))
type_luck <- hr_tracker %>%
group_by(season) %>%
summarize(count = n()) %>%
mutate(type_luck, je = filter(hr_tracker, type_luck == je))
typeluck2010 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2010)
View(typeluck2010)
typeluck2010 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2010) %>%
summarise(count = n())
View(typeluck2010)
typeluck2010 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2010) %>%
summarise(count = n())
typeluck2011 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2011) %>%
summarise(count = n())
typeluck2012 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2012) %>%
summarise(count = n())
typeluck2013 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2013) %>%
summarise(count = n())
typeluck2014 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2014) %>%
summarise(count = n())
typeluck2015 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2015) %>%
summarise(count = n())
typeluck2016 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2016) %>%
summarise(count = n())
typeluck2017 <- hr_tracker %>%
group_by(type_luck) %>%
filter(season==2017) %>%
summarise(count = n())
View(type_luck)
View(typeluck2010)
x <- data.frame(type)
View(x)
x <- data.frame(season)
View(x)
x$blankVar <- x[type]
x$blankVar <- x[je]
x$blankVar <- x[c("je","pl","nd")]
x <- x(col3="je")
x <- x[(col3="je")]
x$size <- c("small", "large", "medium")
View(typeluck2017)
